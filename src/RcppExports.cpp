// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CV_SWEN_Main
Rcpp::List CV_SWEN_Main(arma::mat& x, arma::vec& y, arma::uword& type, arma::uword& G, arma::uword& include_intercept, double& alpha_s, double& alpha_d, arma::uword& n_lambda_sparsity, arma::uword& n_lambda_diversity, double& tolerance, arma::uword& max_iter, arma::uword& n_folds, arma::uword& active_set, arma::uword& full_diversity, arma::uword& n_threads);
RcppExport SEXP _SplitGLM_CV_SWEN_Main(SEXP xSEXP, SEXP ySEXP, SEXP typeSEXP, SEXP GSEXP, SEXP include_interceptSEXP, SEXP alpha_sSEXP, SEXP alpha_dSEXP, SEXP n_lambda_sparsitySEXP, SEXP n_lambda_diversitySEXP, SEXP toleranceSEXP, SEXP max_iterSEXP, SEXP n_foldsSEXP, SEXP active_setSEXP, SEXP full_diversitySEXP, SEXP n_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type type(typeSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type include_intercept(include_interceptSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha_s(alpha_sSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha_d(alpha_dSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_lambda_sparsity(n_lambda_sparsitySEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_lambda_diversity(n_lambda_diversitySEXP);
    Rcpp::traits::input_parameter< double& >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_folds(n_foldsSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type active_set(active_setSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type full_diversity(full_diversitySEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type n_threads(n_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(CV_SWEN_Main(x, y, type, G, include_intercept, alpha_s, alpha_d, n_lambda_sparsity, n_lambda_diversity, tolerance, max_iter, n_folds, active_set, full_diversity, n_threads));
    return rcpp_result_gen;
END_RCPP
}
// Split_WEN_Main
Rcpp::List Split_WEN_Main(arma::mat& x, arma::vec& y, arma::uword& type, arma::uword& G, arma::uword& include_intercept, double& alpha_s, double& alpha_d, double& lambda_sparsity, double& lambda_diversity, double& tolerance, arma::uword& max_iter, arma::uword& active_set_convergence);
RcppExport SEXP _SplitGLM_Split_WEN_Main(SEXP xSEXP, SEXP ySEXP, SEXP typeSEXP, SEXP GSEXP, SEXP include_interceptSEXP, SEXP alpha_sSEXP, SEXP alpha_dSEXP, SEXP lambda_sparsitySEXP, SEXP lambda_diversitySEXP, SEXP toleranceSEXP, SEXP max_iterSEXP, SEXP active_set_convergenceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type type(typeSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type G(GSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type include_intercept(include_interceptSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha_s(alpha_sSEXP);
    Rcpp::traits::input_parameter< double& >::type alpha_d(alpha_dSEXP);
    Rcpp::traits::input_parameter< double& >::type lambda_sparsity(lambda_sparsitySEXP);
    Rcpp::traits::input_parameter< double& >::type lambda_diversity(lambda_diversitySEXP);
    Rcpp::traits::input_parameter< double& >::type tolerance(toleranceSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type max_iter(max_iterSEXP);
    Rcpp::traits::input_parameter< arma::uword& >::type active_set_convergence(active_set_convergenceSEXP);
    rcpp_result_gen = Rcpp::wrap(Split_WEN_Main(x, y, type, G, include_intercept, alpha_s, alpha_d, lambda_sparsity, lambda_diversity, tolerance, max_iter, active_set_convergence));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SplitGLM_CV_SWEN_Main", (DL_FUNC) &_SplitGLM_CV_SWEN_Main, 15},
    {"_SplitGLM_Split_WEN_Main", (DL_FUNC) &_SplitGLM_Split_WEN_Main, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_SplitGLM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
